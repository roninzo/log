package logger

// LogLevel
type LogLevel int

const (
	Silent LogLevel = iota + 1
	Error
	Warn
	Info
)

// // Updates (*gormLogger).level from (*gormLogger).LogLevel.
// func (l *gormLogger) setLevel(level logger.LogLevel) {
// 	l.Level(toInternalLevel(level))
// }

// // Updates (*gormLogger).level from (*gormLogger).LogLevel.
// func (l *gormLogger) inset() {
// 	switch l.LogLevel {
// 	case logger.Silent:
// 		l.Level(levels.Off)
// 	case logger.Error:
// 		l.Level(levels.Error)
// 	case logger.Warn:
// 		l.Level(levels.Warn)
// 	case logger.Info:
// 		l.Level(levels.Info)
// 	default:
// 		l.Level(levels.Info)
// 	}
// }

// // Updates (*gormLogger).LogLevel from (*gormLogger).level.
// func (l *gormLogger) outset() {
// 	switch l.Level() {
// 	case levels.Trace:
// 		l.LogLevel = logger.Info
// 	case levels.Debug:
// 		l.LogLevel = logger.Info
// 	case levels.Info:
// 		l.LogLevel = logger.Info
// 	case levels.Warn:
// 		l.LogLevel = logger.Warn
// 	case levels.Error:
// 		l.LogLevel = logger.Error
// 	case levels.Panic:
// 		l.LogLevel = logger.Error
// 	case levels.Fatal:
// 		l.LogLevel = logger.Error
// 	case levels.Off:
// 		l.LogLevel = logger.Silent
// 	default:
// 		l.LogLevel = logger.Info
// 	}
// }
